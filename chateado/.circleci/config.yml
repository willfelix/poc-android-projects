version: 2

jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      #      - run:
      #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
      #         command: sudo chmod +x ./gradlew
      - run:
          name: Accept licenses
          command: yes | sdkmanager --licenses || true
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
      - run:
          name: Build application
          command: ./gradlew assemble
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apk

  deploy:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Accept licenses
          command: yes | sdkmanager --licenses || true
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - run:
          name: Atualiza curl
          command: curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
      - run:
          name: Install Node
          command: sudo apt-get install nodejs
      - run:
          name: Install NPM
          command: sudo apt-get install npm
      - run:
          name: Base de fogo
          command: npm install --prefix=./firebase firebase-tools
      - run:
          name: Bundle install
          command: bundle install
      - run:
          name: Deploy application
          command: bundle exec fastlane bota_pra_arrombar
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
              - build
          filters:
              branches:
                  only: master